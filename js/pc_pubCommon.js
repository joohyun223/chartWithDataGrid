var commonJs = {};
this.commonJs = commonJs;

$(document).ready(function () {
    commonJs.init();
});

$(window).on('load', function () {

})
commonJs.init = function () {
    //메인 페이지 모션
    commonJs.main._init();
}

// https://gridjs.io/docs/examples/html-cells/
// 데이터 asis https://www.db-fi.com/product/fund/pr_FundInsight_viw.do?codeName=S22041
commonJs.getDummyData = {
    //자산구성 > 수익률 더미데이터 셋팅 (10.12 - 11.11)
    chart1: [
        {
            label: '펀드',
            data: [10.31, 26.77, 28.72, -75.93]
        }, {
            label: 'BM',
            data: [3.93, 36.90, 6.85, 7.30]
        }
    ],
    chart2: [
        {
            label: '펀드',
            data: [7.47, -0.86]
        },
        {
            label: 'BM',
            data: [4.98, -4.32]
        }
    ],
    // 자산구성 수익률 더미데이터 셋팅
    chart3_1month: [
        //날짜
        {
            name: '날짜',
            data: ['2020.10.12', '2020.10.13', '2020.10.14', '2020.10.15', '2020.10.16', '2020.10.19', '2020.10.20', '2020.10.21', '2020.10.22', '2020.10.23', '2020.10.26', '2020.10.27', '2020.10.28', '2020.10.29', '2020.10.30', '2020.11.02', '2020.11.03', '2020.11.04', '2020.11.05', '2020.11.06', '2020.11.09', '2020.11.10', '2020.11.11']
        },
        //해당펀드
        {
            name: '해당펀드',
            data: [29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 28.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984]
        },
        //BM
        {
            name: 'BM',
            data: [15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881]
        },
        //동일유형 평균
        {
            name: '동일유형 평균',
            data: [18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333]
        },
        //설정액
        {
            name: '설정액',
            data: [438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447]
        }
    ],
    chart3_3month: [
        //날짜
        {
            name: '날짜',
            data: ['2020.10.03', '2020.10.04', '2020.10.05', '2020.10.06', '2020.10.07', '2020.10.08', '2020.10.09', '2020.10.10', '2020.10.11', '2020.10.12', '2020.10.13', '2020.10.14', '2020.10.15', '2020.10.16', '2020.10.17', '2020.10.18', '2020.10.19', '2020.10.20', '2020.10.21', '2020.10.22', '2020.10.23', '2020.10.24', '2020.10.25','2020.10.26', '2020.10.27', '2020.10.28', '2020.10.29', '2020.10.30', '2020.11.01', '2020.11.02', '2020.11.03', '2020.11.04', '2020.11.05', '2020.11.06', '2020.11.07', '2020.11.08', '2020.11.09', '2020.11.10', '2020.11.11', '2020.11.12', '2020.11.13', '2020.11.14', '2020.11.15', '2020.11.16', '2020.11.17', '2020.11.18','2020.11.19', '2020.11.20', '2020.11.21', '2020.11.22', '2020.11.23', '2020.11.24', '2020.11.25', '2020.11.26', '2020.11.27', '2020.11.28', '2020.11.29', '2020.11.30', '2020.12.01', '2020.12.02', '2020.12.03', '2020.12.04', '2020.12.05', '2020.12.06', '2020.12.07', '2020.12.08', '2020.12.09', '2020.12.10', '2020.12.11']
        },
        //해당펀드
        {
            name: '해당펀드',
            data: [29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 28.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984,29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 28.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984,29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 28.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984]
        },
        //BM
        {
            name: 'BM',
            data: [15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881,15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881,15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881]
        },
        //동일유형 평균
        {
            name: '동일유형 평균',
            data: [18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333,18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333,18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333]
        },
        //설정액
        {
            name: '설정액',
            data: [438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447,438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447,438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447]
        }
    ],
    chart3_6month: [
        //날짜
        {
            name: '날짜',
            data: ['2020.07.18', '2020.07.19', '2020.07.20', '2020.07.21', '2020.07.22', '2020.07.23', '2020.07.24', '2020.07.25','2020.07.26', '2020.07.27', '2020.07.28', '2020.07.29', '2020.07.30','2020.08.03', '2020.08.04', '2020.08.05', '2020.08.06', '2020.08.07', '2020.08.08', '2020.08.09', '2020.08.10', '2020.08.11', '2020.08.12', '2020.08.13', '2020.08.14', '2020.08.15', '2020.08.16', '2020.08.17', '2020.08.18', '2020.08.19', '2020.08.20', '2020.08.21', '2020.08.22', '2020.08.23', '2020.08.24', '2020.08.25','2020.08.26', '2020.08.27', '2020.08.28', '2020.08.29', '2020.08.30','2020.09.03', '2020.09.04', '2020.09.05', '2020.09.06', '2020.09.07', '2020.09.08', '2020.09.09', '2020.09.10', '2020.09.11', '2020.09.12', '2020.09.13', '2020.09.14', '2020.09.15', '2020.09.16', '2020.09.17', '2020.09.18', '2020.09.19', '2020.09.20', '2020.09.21', '2020.09.22', '2020.09.23', '2020.09.24', '2020.09.25','2020.09.26', '2020.09.27', '2020.09.28', '2020.09.29', '2020.09.30','2020.10.03', '2020.10.04', '2020.10.05', '2020.10.06', '2020.10.07', '2020.10.08', '2020.10.09', '2020.10.10', '2020.10.11', '2020.10.12', '2020.10.13', '2020.10.14', '2020.10.15', '2020.10.16', '2020.10.17', '2020.10.18', '2020.10.19', '2020.10.20', '2020.10.21', '2020.10.22', '2020.10.23', '2020.10.24', '2020.10.25','2020.10.26', '2020.10.27', '2020.10.28', '2020.10.29', '2020.10.30', '2020.11.01', '2020.11.02', '2020.11.03', '2020.11.04', '2020.11.05', '2020.11.06', '2020.11.07', '2020.11.08', '2020.11.09', '2020.11.10', '2020.11.11', '2020.11.12', '2020.11.13', '2020.11.14', '2020.11.15', '2020.11.16', '2020.11.17', '2020.11.18','2020.11.19', '2020.11.20', '2020.11.21', '2020.11.22', '2020.11.23', '2020.11.24', '2020.11.25', '2020.11.26', '2020.11.27', '2020.11.28', '2020.11.29', '2020.11.30', '2020.12.01', '2020.12.02', '2020.12.03', '2020.12.04', '2020.12.05', '2020.12.06', '2020.12.07', '2020.12.08', '2020.12.09', '2020.12.10', '2020.12.11']
        },
        //해당펀드
        {
            name: '해당펀드',
            data: [29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 28.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984,29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 28.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984,29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 28.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984,29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 50.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984,29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 28.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984,29.7670872219, 32.5009123614, 34.7746467861, 33.7567401766, 32.4691772858, 29.1897121256, 29.6263294235, 27.9594187773, 28.5017671009, 28.3595603053, 28.4132935123, 29.468132427, 27.0108661119, 27.6191984795, 22.244519234, 23.8611699982, 21.6932919445, 22.7898495863, 24.7107464102, 29.1879178172, 31.531690474, 31.3010768274, 29.883369984]
        },
        //BM
        {
            name: 'BM',
            data: [15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881,15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881,15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881,15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881,15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881,15.1246831543, 17.128519559, 19.1042680005, 20.2880743876, 18.236052615, 16.6900247185, 16.5117453651, 16.5274660586, 14.3087776649, 15.3010515039, 14.3463847806, 14.9431523175, 15.3392222389, 12.978151607, 12.1794511261, 7.3605818624, 8.6432517061, 7.3254627034, 8.9769420196, 9.8551962728, 11.917004141, 14.0949304146, 14.0621038881]
        },
        //동일유형 평균
        {
            name: '동일유형 평균',
            data: [18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333,18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333,18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333, 18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333,18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333,18.1254447798, 19.9386915722, 21.7456141336, 20.6728188789, 20.418996068, 19.1998320908, 19.4094485946, 18.7592752603, 19.8157596633, 19.3176619685, 18.6983074774, 18.364750328, 17.1045961779, 16.8317980215, 15.1165491111, 15.2312166765, 13.6042106669, 14.7397724548, 15.2468445024, 16.5322428603, 18.6529556115, 18.724639924, 19.800103333]
        },
        //설정액
        {
            name: '설정액',
            data: [438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447,438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447,438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447,438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447,438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447,438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 445, 446, 446, 447]
        }
    ],
    //자산구성 > 기준가 더미데이터 셋팅
    chart4_1month: [
        //기준일자
        {
            name: '기준일자',
            data: ['20.10.06', '20.10.07', '20.10.08', '20.10.12', '20.10.13', '20.10.14', '20.10.15', '20.10.16', '20.10.19', '20.10.20', '20.10.21', '20.10.22', '20.10.23', '20.10.26', '20.10.27', '20.10.28', '20.10.29', '20.10.30', '20.11.02', '20.11.03', '20.11.04', '20.11.05']
        },
        //기준가
        {
            name: '기준가',
            data: [1961.18, 1990.94, 1963.42, 1991.25, 2033.20, 2068.09, 2071.29, 2050.04, 2029.79, 2036.65, 2010.46, 2010.68, 2013.14, 2020.84, 2037.44, 1998.77, 2014.15, 1943.26, 1963.15, 1928.79, 1946.17, 1975.73]
        },
        //증감(기준가)
        {
            name: '증감(기준가)',
            data: [6.03, 0.43, 0.50, -1.82, 47.83, 34.42, 19.62, -11.01, -8.35, 0.63, -2.46, 28.57, -8.84, -8.19, -24.43, -9.56, 1.46, 29.88, 1.02, -26.41, 22.91, 17.48]
        },
        //설정액
        {
            name: '설정액',
            data: [438, 437, 438, 438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444]
        },
        //순자산액
        {
            name: '순자산액',
            data: [858, 870, 859, 872, 891, 906, 908, 900, 891, 895, 885, 885, 885, 891, 898, 881, 890, 860, 870, 855, 864, 878]
        },
        //과표기준가
        {
            name: '과표기준가',
            data: [1442.46, 1442.89, 1443.39, 1441.57, 1489.40, 1523.82, 1543.44, 1532.43, 1524.08, 1524.71, 1522.25, 1550.82, 1541.98, 1533.79, 1509.36, 1499.80, 1501.26, 1531.14, 1532.16, 1505.75, 1528.66, 1546.14]
        }
    ],
    chart4_3month: [
        //기준일자
        {
            name: '기준일자',
            data: ['2020.10.06', '2020.10.07', '2020.10.08', '2020.10.09', '2020.10.10', '2020.10.11', '2020.10.12', '2020.10.13', '2020.10.14', '2020.10.15', '2020.10.16', '2020.10.17', '2020.10.18', '2020.10.19', '2020.10.20', '2020.10.21', '2020.10.22', '2020.10.23', '2020.10.24', '2020.10.25','2020.10.26', '2020.10.27', '2020.10.28', '2020.10.29', '2020.10.30', '2020.11.01', '2020.11.02', '2020.11.03', '2020.11.04', '2020.11.05', '2020.11.06', '2020.11.07', '2020.11.08', '2020.11.09', '2020.11.10', '2020.11.11', '2020.11.12', '2020.11.13', '2020.11.14', '2020.11.15', '2020.11.16', '2020.11.17', '2020.11.18','2020.11.19', '2020.11.20', '2020.11.21', '2020.11.22', '2020.11.23', '2020.11.24', '2020.11.25', '2020.11.26', '2020.11.27', '2020.11.28', '2020.11.29', '2020.11.30', '2020.12.01', '2020.12.02', '2020.12.03', '2020.12.04', '2020.12.05', '2020.12.06', '2020.12.07', '2020.12.08', '2020.12.09', '2020.12.10', '2020.12.11']
        },
        //기준가
        {
            name: '기준가',
            data: [2000.18, 1990.94, 1963.42, 1991.25, 2033.20, 2068.09, 1830.29, 2050.04, 2029.79, 2036.65, 2010.46, 2010.68, 2013.14, 2020.84, 2037.44, 1998.77, 2014.15, 1943.26, 1963.15, 1928.79, 1946.17, 1975.73, 1961.18, 1990.94, 1963.42, 1991.25, 2033.20, 2068.09, 2071.29, 2050.04, 2029.79, 2036.65, 2010.46, 2010.68, 2013.14, 2020.84, 2037.44, 1998.77, 2014.15, 1943.26, 1963.15, 1928.79, 1946.17, 1975.73, 1961.18, 1990.94, 1963.42, 1991.25, 2033.20, 2068.09, 2071.29, 2050.04, 2029.79, 2036.65, 2010.46, 2010.68, 2013.14, 2020.84, 2037.44, 1998.77, 2014.15, 1943.26, 1963.15, 1928.79, 1946.17, 1975.73]
        },
        //증감(기준가)
        {
            name: '증감(기준가)',
            data: [6.03, 0.43, 0.50, -1.82, 47.83, 34.42, 19.62, -11.01, -8.35, 0.63, -2.46, 28.57, -8.84, -8.19, -24.43, -9.56, 1.46, 29.88, 1.02, -26.41, 22.91, 17.48, 6.03, 0.43, 0.50, -1.82, 47.83, 34.42, 19.62, -11.01, -8.35, 0.63, -2.46, 28.57, -8.84, -8.19, -24.43, -9.56, 1.46, 29.88, 1.02, -26.41, 22.91, 17.48, 6.03, 0.43, 0.50, -1.82, 47.83, 34.42, 19.62, -11.01, -8.35, 0.63, -2.46, 28.57, -8.84, -8.19, -24.43, -9.56, 1.46, 29.88, 1.02, -26.41, 22.91, 17.48]
        },
        //설정액
        {
            name: '설정액',
            data: [362, 437, 438, 438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 438, 437, 438, 438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444, 438, 437, 438, 438, 438, 438, 439, 439, 439, 440, 440, 440, 440, 441, 441, 441, 442, 443, 443, 443, 444, 444]
        },
        //순자산액
        {
            name: '순자산액',
            data: [858, 870, 859, 872, 891, 906, 908, 900, 891, 895, 885, 885, 885, 891, 898, 881, 890, 860, 870, 855, 864, 878, 858, 870, 859, 872, 891, 906, 908, 900, 891, 895, 885, 885, 885, 891, 898, 881, 890, 860, 870, 855, 864, 878, 858, 870, 859, 872, 891, 906, 908, 900, 891, 895, 885, 885, 885, 891, 898, 881, 890, 860, 870, 855, 864, 878]
        },
        //과표기준가
        {
            name: '과표기준가',
            data: [1442.46, 1442.89, 1443.39, 1441.57, 1489.40, 1523.82, 1543.44, 1532.43, 1524.08, 1524.71, 1522.25, 1550.82, 1541.98, 1533.79, 1509.36, 1499.80, 1501.26, 1531.14, 1532.16, 1505.75, 1528.66, 1546.14, 1442.46, 1442.89, 1443.39, 1441.57, 1489.40, 1523.82, 1543.44, 1532.43, 1524.08, 1524.71, 1522.25, 1550.82, 1541.98, 1533.79, 1509.36, 1499.80, 1501.26, 1531.14, 1532.16, 1505.75, 1528.66, 1546.14, 1442.46, 1442.89, 1443.39, 1441.57, 1489.40, 1523.82, 1543.44, 1532.43, 1524.08, 1524.71, 1522.25, 1550.82, 1541.98, 1533.79, 1509.36, 1499.80, 1501.26, 1531.14, 1532.16, 1505.75, 1528.66, 1546.14]
        }
    ],
    //자산구성 도넛차트 더미데이터 셋팅 
    chart5: [
        //채권선물순포지션
        {
            name: '채권선물순포지션',
            data: [220]
        },
        //국내채권
        {
            name: '국내채권',
            data: [40]
        },
        //국내주식
        {
            name: '국내주식',
            data: [40]
        },
        //해외채권
        {
            name: '해외채권',
            data: [40]
        },
        //해외주식
        {
            name: '해외주식',
            data: [40]
        },
        //펀드
        {
            name: '펀드',
            data: [40]
        },
        //유동성
        {
            name: '유동성',
            data: [40]
        },
        //주식선물포지션
        {
            name: '주식선물포지션',
            data: [40]
        }
    ]
}

//그리드 테이블 렌더
commonJs.gridRender = {
    init: function () {
        this._bindEvt();
    },
    _renderGrid: function (node, data, op) {
        if (!$(node).length) {
            return;
        }
        var orgOption = {
            sort: true,
            columns: data.columns,
            data: data.data,
            className: {
                table: 'tblTypeH1'
            },
            summary: '표로보기 입니다.'
        }
        var customData = $.extend(true, orgOption, op.option);
        var grid = $(node).data('grid');

        if (grid != undefined) {
            grid.updateConfig(customData).forceRender();
        } else {
            grid = new gridjs.Grid(customData).render(node, function () {
                $(node).find('.tblTypeH1').prepend('<caption>' + op.caption + '</caption>')
                if (op.callback != undefined) op.callback();
            });
        }
        $(node).data('grid', grid);
    }
}

//메인 페이지 모션
commonJs.main = {
    _init: function () {

        // 기본 글꼴 설정
        Chart.defaults.global.defaultFontFamily = 'NanumBarunGothic', '나눔바른고딕', '돋움', 'Dotum', 'Arial', 'Sans-serif';
        Chart.defaults.global.defaultFontSize = 12;

        // 자산구성>수익률, 자산구성>기준가 차트에서 마우스 호버시 세로 선 보이기
        Chart.plugins.register({
            afterDatasetsDraw: function (chart) {
                if (!chart.config.options.showVertical) {
                    return;
                }
                if (chart.tooltip._active && chart.tooltip._active.length) {
                    var activePoint = chart.tooltip._active[0],
                        ctx = chart.ctx,
                        x = activePoint.tooltipPosition().x,
                        topY = chart.chartArea['top'],
                        bottomY = chart.chartArea['bottom'];

                    // draw line
                    ctx.save();
                    ctx.beginPath();
                    ctx.moveTo(x, topY);
                    ctx.lineTo(x, bottomY);
                    ctx.lineWidth = 0.5;
                    ctx.strokeStyle = 'black';
                    ctx.stroke();
                    ctx.restore();
                }
            }
        });

        this._bindChart();
    },
    _bindChart: function () {
        // 기간별 수익률 차트         
        this._setMultiAxisBarChart($('#chart1'), commonJs.getDummyData.chart1);
        this._setMultiAxisBarChart($('#chart2'), commonJs.getDummyData.chart2);

        // 자산구성 수익률 차트
        this._setComboBarLineChart($('#chart3'), $('#table1'), commonJs.getDummyData.chart3_1month, 1);

        // 자산구성 기준가 차트
        this._setLineChart($('#chart4'), $('#table2'), commonJs.getDummyData.chart4_1month, 1);

        // 자산구성 도넛차트
        this._setDoughnut($('#chart5'), $('#table3'), commonJs.getDummyData.chart5);
    },
    /**
     * 기간별 수익률 차트
     * 
     * @param {Canvas Element} el 
     * @param {Array} data 
     */
    _setMultiAxisBarChart: function (el, data) {
        if (!el.length) {
            return;
        }
        var dataArray = data[0].data.concat(data[1].data);
        var refData = (Math.abs(Math.min.apply(null, dataArray)) > Math.max.apply(null, dataArray)) ? Math.abs(Math.min.apply(null, dataArray)) : Math.max.apply(null, dataArray);
        var images = [new Image(), new Image()];
        var ctx = el.get(0).getContext('2d');
        var srcs = ['./images/p1.jpg', './images/p7.jpg'];
        images.forEach(function (image, idx) {
            image.src = srcs[idx];
        })

        function imageIsLoaded(image) {
            return new Promise(function (resolve) {
                image.onload = function () { resolve() };
                image.onerror = function () { resolve() };
            })
        }

        Promise.all(images.map(imageIsLoaded)).then(function () {
            var p1 = ctx.createPattern(images[0], 'repeat');
            var p2 = ctx.createPattern(images[1], 'repeat');

            var dataCustom = {
                datasets: [{
                    //막대 바 선 색 지정
                    borderColor: 'transparent',
                    borderWidth: 0,
                    data: data[0].data,
                    label: data[0].label,
                    backgroundColor: p1
                }, {
                    borderColor: 'transparent',
                    borderWidth: 0,
                    data: data[1].data,
                    label: data[1].label,
                    backgroundColor: p2
                }],
                labels: ['1개월', '1년', '3년', '5년']
            }

            var myChart = new Chart(ctx, {
                type: 'bar',
                data: dataCustom,
                options: {
                    // animation: {
                    //     duration: 1,
                    //     onComplete: function () {
                    //         var controller = this.chart.controller;
                    //         var chart = controller.chart;
                    //         var yAxis = controller.scales['y-axis-0'];

                    //         yAxis.ticks.forEach(function (value, index) {
                    //             var xOffset = chart.width - 40;
                    //             var yOffset = ((chart.height - 60) / 2 * index) + 15;
                    //             console.log('ㅁㅁㅁ' , value, xOffset, yOffset );
                    //             ctx.fillText(value + 'M', xOffset, yOffset);
                    //         });
                    //     }
                    // },
                    legend: {
                        display: false,
                        position: 'bottom'
                    },
                    layout: {
                        padding: {
                        }
                    },
                    title: {
                        display: false,
                        text: '기간별 수익률',
                    },
                    responsive: false,
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: [{
                            position: 'right',
                            display: true,
                            scaleLabel: {
                                display: true,
                            },
                            gridLines: {
                                display: true,
                                drawBorder: true,
                                drawTicks: false,
                                lineWidth: 1,
                                color: ['transparent', 'rgba(0,0,0,0.1)', 'black'],
                                zeroLineColor: 'rgba(0,0,0,0.5)',
                                zeroLineWidth: 1,
                                z: 50
                            },
                            ticks: {
                                beginAtZero: true,
                                maxTicksLimit: 3,
                                userCallback: function (label, index, labels) {
                                    if (Math.floor(label) === 0) {
                                        return label;
                                    }
                                    if (index == 0 || index == labels.length - 1) {
                                        return label;
                                    }
                                },
                                min: -refData,
                                max: refData,
                                fontColor: 'black',
                                labelOffset: 0,
                                padding: 5,
                            },

                        }],
                        xAxes: [{
                            display: true,
                            barPercentage: 0.5, // 각 막대의 너비를 퍼센트 단위로 수동 설정
                            barThickness: 17,  // 각 막대의 너비를 픽셀 단위로 수동 설정
                            maxBarThickness: 13, // number (pixels)
                            scaleLabel: {
                                display: true,
                            },
                            gridLines: {
                                display: true,
                                drawBorder: false,
                                drawTicks: false,
                                lineWidth: 1,
                                color: ['transparent', 'transparent', 'transparent', 'transparent', 'black'],
                                zeroLineColor: 'transparent',
                                zeroLineWidth: 2,
                            },
                            ticks: {
                                fontColor: 'black',
                                display: true,
                                padding: 5,
                            }
                        }]
                    },
                }
            });

            el.data('chart', myChart);
        })
    },

    /**
     * 자산구성 수익률 차트
     * @param {Canvas Element} chartEl 차트 엘리먼트
     * @param {Element} tableEl 테이블 엘리먼트
     * @param {Array} dataList 데이터리스트 
     * @param {Number} months 개월 수
     */
    _setComboBarLineChart: function (chartEl, tableEl, dataList, months) {
        var chart_before = chartEl.data('chart');
        if (!chartEl.length) {
            return;
        }

        if (chart_before != undefined) {
            chart_before.destroy();
        }
        var ctx = chartEl.get(0).getContext('2d');
        var chartData = {
            //레이블 날짜
            labels: dataList[0].data,
            //데이터
            datasets: [
                {
                    //해당펀드
                    type: 'line',
                    label: '해당펀드',
                    borderColor: 'rgb(10,201,172)',
                    borderWidth: 1,
                    fill: false,
                    pointStyle: 'triangle',
                    pointRadius: (months > 1) ? 0 : 3,
                    backgroundColor: 'rgb(10,201,172)',
                    yAxisID: 'y-axis-1',
                    data: dataList[1].data,
                }, {
                    //BM
                    type: 'line',
                    label: 'BM',
                    borderColor: 'rgb(252,107,83)',
                    borderWidth: 1,
                    fill: false,
                    pointStyle: 'rect',
                    pointRadius: (months > 1) ? 0 : 3,
                    backgroundColor: 'rgb(252,107,83)',
                    yAxisID: 'y-axis-1',
                    data: dataList[2].data,
                }, {
                    //동일유형평균
                    type: 'line',
                    label: '동일유형평균',
                    borderColor: 'rgb(155,192,66)',
                    borderWidth: 1,
                    fill: false,
                    pointStyle: 'rectRot',
                    pointRadius: (months > 1) ? 0 : 3,
                    backgroundColor: 'rgb(155,192,66)',
                    yAxisID: 'y-axis-1',
                    data: dataList[3].data,
                }, {
                    //설정액
                    type: 'bar',
                    label: '설정액',
                    backgroundColor: 'rgb(205,205,206)',
                    borderColor: 'rgb(205,205,206)',
                    borderWidth: 2,
                    yAxisID: 'y-axis-2',
                    data: dataList[4].data,
                }
            ]
        }
        var sumDataArr = dataList[1].data.concat(dataList[2].data, dataList[3].data);
        var AxesOption = {
            yAxes: [
                //axes1
                {
                    min: Math.round(Math.min.apply(null, sumDataArr) / 10) * 10 - 10,
                    max: Math.round(Math.max.apply(null, sumDataArr) / 10) * 10 + 10,
                    stepSize: function(){
                        return (AxesOption.yAxes[0].max - AxesOption.yAxes[0].min) / 4
                    },
                    getStepLabels: function(){
                        var arr = []; 
                        for (var i = 0; i < 5; i++) {
                            arr.push(AxesOption.yAxes[0].min + AxesOption.yAxes[0].stepSize() * i);
                        }
                        return arr;
                    }
                },
            ]
        }

        var myChart = new Chart(ctx, {
            type: 'bar',
            data: chartData,
            options: {
                showVertical: true, //마우스 호버시 세로 선 보이기
                scaleShowValues: true,
                legend: {
                    display: false,
                    position: 'bottom'
                },
                legendCallback: function (chart) {
                },
                responsive: false,
                title: {
                    display: false,
                    text: '자산구성>수익률'
                },
                elements: {
                    line: {
                        fill: false,
                        tension: 0
                    }
                },
                scales: {
                    yAxes: [{
                        id: 'y-axis-1',
                        position: 'right',
                        ticks: {
                            maxTicksLimit: 1000,
                            stepSize: 0.5,
                            min: AxesOption.yAxes[0].min,
                            max: AxesOption.yAxes[0].max,
                            beginAtZero: true,
                            fontColor: 'black',
                            padding: 5,
                            userCallback: function (label, index, labels) {
                                if ($.inArray(label, AxesOption.yAxes[0].getStepLabels()) != -1) {
                                    return Math.ceil(label);
                                }
                            },  
                        },
                        gridLines: {
                            display: true,
                            drawBorder: true,
                            drawTicks: false,
                            lineWidth: 1,
                            color: 'rgb(208,208,208)',
                            zeroLineColor: 'rgba(0,0,0,0.1)',
                            zeroLineWidth: 1,
                        },
                    },
                    {
                        id: 'y-axis-2',
                        position: 'right',
                        ticks: {
                            display: false,
                            min: 0,
                            max: Math.min.apply(null, dataList[4].data) * 4,
                            beginAtZero: true,
                        },
                        gridLines: {
                            display: false,
                            drawBorder: true,
                            drawTicks: true,
                            lineWidth: 1,
                            color: ['transparent', 'rgba(0,0,0,0.1)'],
                            zeroLineColor: 'rgba(0,0,0,0.1)',
                            zeroLineWidth: 1,
                        },

                    }],
                    xAxes: [{
                        offset: true,
                        ticks: {
                            beginAtZero: true,
                            userCallback: function (label, index, labels) {
                                if (Math.floor(labels.length / 2) == index) {
                                    return label;
                                }
                                if (index == 0 || index == labels.length - 1) {
                                    return label;
                                }
                            },
                            autoSkip: false,
                            maxRotation: 0,
                            labelOffset: 0,
                            fontColor: 'black',
                            padding: 5
                        },
                        gridLines: {
                            display: true,
                            drawBorder: true,
                            drawTicks: false,
                            lineWidth: 1,
                            color: 'transparent',
                            zeroLineColor: 'rgb(208,208,208)',
                            zeroLineWidth: 1,
                        },
                    }]
                },
                tooltips: {
                    intersect: false,
                    mode: 'index',
                },
            }
        });
        chartEl.data('chart', myChart);
        chartEl.closest('.chart-container').find('.chart-legend li .frmCheck').off('click').on('click', function (e) {
            e.preventDefault();
            commonJs.main._updateDataset(myChart, $(this), $(this).closest('li').index());
        })

        //그리드 테이블 옵션 
        var gridOption = {
            caption: '수익률',
            option: {
                summary: '날짜, 해당펀드, BM, 동일유형 평균, 설정액에 대한 표입니다.'
            }
        }
        //데이터 그리드 렌더
        this._setDataGridTable(tableEl, dataList, gridOption);
    },
    /**
     * 자산구성 기준가 차트 
     * @param {Canvas Element} chartEl 차트 엘리먼트
     * @param {Element} tableEl 테이블 엘리먼트
     * @param {Array} dataList 데이터리스트 
     * @param {Number} months 개월 수
     */
    _setLineChart: function (chartEl, tableEl, dataList, months) {
        var chart_before = chartEl.data('chart');
        if (!chartEl.length) {
            return;
        }

        if (chart_before != undefined) {
            chart_before.destroy();
        }
        
        var ctx = chartEl.get(0).getContext('2d');
        var chartData = {
            //레이블 날짜
            labels: dataList[0].data,
            //데이터
            datasets: [
                {
                    //기준가
                    type: 'line',
                    label: '기준가',
                    borderColor: 'rgb(10,201,172)',
                    backgroundColor: 'rgb(10,201,172)',
                    borderWidth: 1,
                    pointStyle: 'triangle',
                    pointRadius: (months > 1) ? 0 : 3,
                    fill: false,
                    data: dataList[1].data,
                    yAxisID: 'y-axis-2'
                }, {
                    //설정액
                    type: 'line',
                    label: '설정액',
                    borderColor: 'rgb(252,107,83)',
                    backgroundColor: 'rgb(252,107,83)',
                    borderWidth: 1,
                    pointStyle: 'rect',
                    pointRadius: (months > 1) ? 0 : 3,
                    fill: false,
                    data: dataList[3].data,
                    yAxisID: 'y-axis-1'
                }, {
                    //순자산액
                    type: 'line',
                    label: '순자산액',
                    borderColor: 'rgb(21,108,189)',
                    backgroundColor: 'rgb(21,108,189)',
                    borderWidth: 1,
                    pointStyle: 'circle',
                    fill: false,
                    pointRadius: (months > 1) ? 0 : 3,
                    data: dataList[4].data,
                    yAxisID: 'y-axis-3'
                }
            ]
        }
        var AxesOption = {
            yAxes: [
                //axes1
                {
                    min: Math.round(Math.min.apply(null, dataList[3].data) / 10) * 10 - 10,
                    max: Math.round(Math.max.apply(null, dataList[3].data) / 10) * 10 + 10,
                    stepSize: function(){
                        return (AxesOption.yAxes[0].max - AxesOption.yAxes[0].min) / 4
                    },
                    getStepLabels: function(){
                        var arr = []; 
                        for (var i = 0; i < 5; i++) {
                            arr.push(AxesOption.yAxes[0].min + AxesOption.yAxes[0].stepSize() * i);
                        }
                        return arr;
                    }
                },
                //axes2
                {
                    min: Math.round(Math.min.apply(null, dataList[1].data) / 10) * 10 - 10,
                    max: Math.round(Math.max.apply(null, dataList[1].data) / 10) * 10 + 10,
                    stepSize: function(){
                        return (AxesOption.yAxes[1].max - AxesOption.yAxes[1].min) / 4
                    },
                    getStepLabels: function(){
                        var arr = []; 
                        for (var i = 0; i < 5; i++) {
                            arr.push(AxesOption.yAxes[1].min + AxesOption.yAxes[1].stepSize() * i);
                        }
                        return arr;
                    }
                }
            ]
        }
        
        var myChart = new Chart(ctx, { 
            type: 'line',
            data: chartData,
            options: {
                showVertical: true, //마우스 호버시 세로 선 보이기
                scaleShowValues: true,
                legend: {
                    display: false,
                    position: 'bottom',
                },
                responsive: false,
                title: {
                    display: false,
                    text: '자산구성>기준가'
                },
                elements: {
                    line: {
                        fill: false,
                        tension: 0
                    }
                },
                scales: {
                    yAxes: [
                        {
                            //설정액
                            id: 'y-axis-1',
                            type: 'linear',
                            position: 'left',
                            ticks: {
                                beginAtZero: false,
                                maxTicksLimit: 1000,
                                stepSize: 0.5,
                                min: AxesOption.yAxes[0].min,
                                max: AxesOption.yAxes[0].max,
                                padding: 5,
                                userCallback: function (label, index, labels) {
                                    if ($.inArray(label, AxesOption.yAxes[0].getStepLabels()) != -1) {
                                        return Math.ceil(label);
                                    }
                                },  
                            },
                            gridLines: {
                                display: true,
                                drawBorder: true,
                                drawTicks: false,
                                lineWidth: 1,
                                color: 'rgb(208,208,208)',
                                zeroLineColor: 'rgb(208,208,208)',
                                zeroLineWidth: 1,
                            },
                        }
                        ,
                        {
                            //기준가
                            id: 'y-axis-2',
                            type: 'linear',
                            position: 'right',
                            ticks: {
                                display: true,
                                maxTicksLimit: 1000,
                                stepSize:0.5,
                                min: AxesOption.yAxes[1].min,
                                max: AxesOption.yAxes[1].max,
                                padding: 5,
                                userCallback: function (label, index, labels) {
                                    if ($.inArray(label, AxesOption.yAxes[1].getStepLabels()) != -1) {
                                        return Math.ceil(label);
                                    }
                                },  
                            },
                            gridLines: {
                                display: true,
                                drawBorder: true,
                                drawTicks: false,
                                lineWidth: 1,
                                color: ['rgb(208,208,208)', 'transparent', 'transparent', 'transparent', 'transparent', 'transparent'],
                                zeroLineWidth: 1,
                            },
                        },
                        {
                            //순자산액
                            id: 'y-axis-3',
                            type: 'linear',
                            position: 'right',
                            ticks: {
                                display: false,
                                maxTicksLimit: 5,
                                stepSize: 1,
                                beginAtZero: false,
                                min: Math.min.apply(null, dataList[4].data),
                                max: Math.max.apply(null, dataList[4].data),
                            },
                            gridLines: {
                                display: false,
                                drawBorder: true,
                                drawTicks: false,
                                lineWidth: 1,
                                color: 'rgb(208,208,208)',
                                zeroLineColor: 'rgb(208,208,208)',
                                zeroLineWidth: 1,
                            },
                        }
                    ],
                    xAxes: [{
                        offset: true,
                        ticks: {
                            beginAtZero: true,
                            userCallback: function (label, index, labels) {
                                if (Math.floor(labels.length / 2) == index) {
                                    return label;
                                }
                                if (index == 0 || index == labels.length - 1) {
                                    return label;
                                }
                            },
                            autoSkip: false,
                            maxRotation: 0,
                            labelOffset: 0,
                            padding: 5
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false,
                            drawTicks: false,
                            lineWidth: 1,
                            color: 'rgb(208,208,208)',
                            zeroLineColor: 'rgb(208,208,208)',
                            zeroLineWidth: 1,
                        },
                    }]
                },
                tooltips: {
                    intersect: false,
                    mode: 'index',
                },

            }
        });
        chartEl.data('chart', myChart);

        //그리드 테이블 옵션 
        var gridOption = {
            caption: '기준가',
            option: {
                // fixedHeader: true,
                // height: '300px'
                summary: '펀드의 기준가를 기준일자, 기준가, 증감, 설정액, 순자산액, 과표기준가로 제공하는 표입니다.'
            }
        }
        //데이터 그리드 렌더
        this._setDataGridTable(tableEl, dataList, gridOption);
    },
    /**
     * 자산구성 도넛차트
     * @param {Canvas Element} chartEl 차트 엘리먼트
     * @param {Element} tableEl 테이블 엘리먼트
     * @param {Array} dataList 데이터리스트 
     */
    _setDoughnut: function (chartEl, tableEl, dataList) {
        if (!chartEl.length) {
            return;
        }

        var ctx = chartEl.get(0).getContext('2d');
        var images = [];
        var imgUrl = './images/';
        var patterns = [];
        for (var i = 0; i < dataList.length; i++) {
            var img = new Image();
            img.src = imgUrl + 'p' + (i + 1) + '.jpg'
            images.push(img);
        }

        function imageIsLoaded(image) {
            return new Promise(function (resolve) {
                image.onload = function () { resolve() };
                image.onerror = function () { resolve() };
            })
        }
        Promise.all(images.map(imageIsLoaded)).then(function () {
            for (var i = 0; i < dataList.length; i++) {
                patterns.push(ctx.createPattern(images[i], 'repeat'));
            }

            var datasetsData = [];
            var labels = [];
            dataList.forEach(function (data) {
                datasetsData.push(data.data[0]);
                labels.push(data.name);
            });

            var dataCustom = {
                datasets: [{
                    borderWidth: 1,
                    data: datasetsData,
                    label: '자산구성',
                    backgroundColor: patterns
                }],
                labels: labels
            };
            var myChart = new Chart(ctx, {
                type: 'doughnut',
                data: dataCustom,
                options: {
                    responsive: false,
                    legend: {
                        // position: 'right',
                        display: false
                    },
                    legendCallback: function (chart) {
                    },
                    title: {
                        display: false,
                        text: '자산구성'
                    },
                    animation: {
                        animateScale: true,
                        animateRotate: true
                    },
                    plugins: {
                        labels: {
                            render: 'value',
                            fontColor: '#fff'
                        }
                    }
                }
            });

            chartEl.data('chart', myChart);

        });


        var arr = [], gridData = {}, columnData = [];
        dataList.forEach(function (d) {
            var arrData = [];
            arrData.push(d.name);
            d.data.forEach(function (o) {
                arrData.push(o);
            })
            arr.push(arrData);
        })
        gridData.data = arr;

        gridData.data[0].forEach(function (d, i) {
            if (i == 0) {
                columnData.push({ name: 'col' + (i + 1), attributes: { 'scope': 'row' } })
            } else {
                columnData.push('col' + (i + 1))
            }
        })
        //그리드 테이블 옵션 
        var gridOption = {
            caption: '수익률',
            header: 'row',
            option: {
                columns: columnData,
                summary: '채권선물순포지션, 국내채권, 국내주식, 해외채권, 해외주식, 펀드, 유동성, 주식선물포지션에 대한 표입니다.'

            },
            callback: function () {
                tableEl.find('thead').remove();
            }
        }

        //데이터 그리드 렌더
        commonJs.gridRender._renderGrid(tableEl.get(0), gridData, gridOption);
    },
    /**
     * 데이터 그리드 렌더
     * header top인 경우에 해당 함수 호출 
     */
    _setDataGridTable: function (tableEl, data, option) {
        var columns = [];
        var dataList = commonJs.utils._create2DArray(data[0].data.length, data.length);
        data.forEach(function (dummy, iIdx) {
            columns.push(dummy.name);
            dummy.data.forEach(function (data, jIdx) {
                dataList[jIdx][iIdx] = data;
            })
        });
        var gridData = {
            columns: columns,
            data: dataList,
        }
        commonJs.gridRender._renderGrid(tableEl.get(0), gridData, option);
    },
    _updateDataset: function (chart, checkEl, index) {
        var meta = chart.getDatasetMeta(index);
        var isHidden = meta.hidden === null ? false : meta.hidden === false ? false : true;
        if (isHidden === true) {
            meta.hidden = false;
            checkEl.find('input').prop('checked', true);
        } else {
            meta.hidden = true;
            checkEl.find('input').prop('checked', false);
        }
        chart.update();
    }
}

//참조 함수
commonJs.utils = {

    //2차원 배열 생성
    _create2DArray: function (rows, columns) {
        var arr = new Array(rows);
        for (var i = 0; i < rows; i++) {
            arr[i] = new Array(columns);
        }
        return arr;
    },
    _lPad: function (str, padLen, padStr) {
        if (padStr.length > padLen) {
            return str;
        }
        str += ""; // 문자로
        padStr += ""; // 문자로
        while (str.length < padLen)
            str = padStr + str;
        str = str.length >= padLen ? str.substring(0, padLen) : str;
        return str;
    }
}